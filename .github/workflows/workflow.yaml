name: Continuous Integration
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
jobs:
  # continuous-integration:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # git clone my rep -> git checkout to the branch of the push
  #     - uses: actions/checkout@v3
  #     - name: Using Node.jobs
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 18.x
  #     - name: run install, build and test
  #       run: |
  #         npm install
  #         npm run build
  #         npm run test
  continuous-delivery:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    # needs: continuous-integration
    steps:
      # - name: Repo checkout
      #   uses: action/checkout@v4
      - name: Hatz Deploy
        id: hatz
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.VPS_USER }}
          host: ${{ secrets.VPS_HOST }}
          password: ${{ secrets.VPS_PASS }}
          # key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/vyzion/_local
            bash ./deploy-ah-notesapi.sh
  continuous-delivery-vercel:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: continuous-delivery
    if: needs.continuous-delivery.result == 'success'
    steps:
      # vercel
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - run: echo '${{ secrets.NPM_RC }}' > ${{ github.workspace }}/.npmrc
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
